package patterns.practice.Feb2025.twopointers;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class threesum {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] nums = {-1,0,1,2,-1,-4};
		
		
		List<List<Integer>> result1 = threeSum(nums);
		
		for(List list : result1) {
			
				System.out.println(list);
			
			
		}
		

	}
	
	
	
	public static List<List<Integer>> threeSum(int[] nums) {
	     // initialize 3 variables i = first element, j = second element , k = last element in the array 
	      int size = nums.length;
	      //[-1,0,1,2,-1,-4]
	      //[-4,-1,-1,0,1,2]
	      Arrays.sort(nums);
	      //int k = nums.length-1;
	      ArrayList<List<Integer>> result = new ArrayList<>();
	      
	      for(int i = 0; i<size;i++){
	       int k = nums.length-1;
	        for(int j = i+1;j<k;j++){
	          
	          int sum = nums[i]+nums[j]+nums[k];
	          if(sum == 0){
	            ArrayList<Integer> list = new ArrayList<Integer>();
	            list.add(nums[i]);
	            list.add(nums[j]);
	            list.add(nums[k]);
	            result.add(list);
	          }
	          else if(sum > 0){
	            k--;
	          }
	          else{
	            j++;
	          }
	          
	        }
	        i++;
	        
	      }
	      
	      return result;
	   }
	
	
	

}




