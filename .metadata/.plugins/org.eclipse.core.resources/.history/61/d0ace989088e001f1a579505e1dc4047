package algorithms;

import java.util.Arrays;


// in insertion sort, we don't swap but we shift elements . So we dont need swap method
// Concept - here we start assuming first element is in the sorted array and then from index 1 to length(firstUnsortedIndex) is the unsorted array
// we slowly pick 1 by 1 from unsorted array and insert it in the right position in the sorted array
// here we work in the sorted array 


public class InsertionSort {

	public static void main(String[] args) {
		
		
		int[] myIntArray =  {20,35,-15,7,55,1,-22};
		
		System.out.println("-".repeat(10)+"INITIAL ARRAY"+"-".repeat(10));
		System.out.println(Arrays.toString(myIntArray));
		
		
		for(int firstUnsortedIndex =1; firstUnsortedIndex<myIntArray.length; firstUnsortedIndex++) {
			
			// save the first element of unsorted array into a temp variable newElem
			int newElem = myIntArray[firstUnsortedIndex];
			
			int i;
			
			for(i = firstUnsortedIndex ; i>0 && myIntArray[i-1]>newElem;i--) {
				
				
			}
			
		}
		
		
		
		
		
		
		
		System.out.println("-".repeat(10)+"Sorted Array"+"-".repeat(10));
		System.out.println(Arrays.toString(myIntArray));


	}

}
