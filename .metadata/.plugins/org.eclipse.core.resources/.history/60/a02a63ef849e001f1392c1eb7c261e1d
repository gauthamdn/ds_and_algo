package leetcode.graphs;

import java.util.HashMap;
import java.util.Map;

public class L547_NumOfProvinces {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
		int[][] isConnected  = {{1,1,0},{1,1,0},{0,0,1}};
		findCircleNum(isConnected);
	}
	
	public static int findCircleNum(int[][] isConnected) {
        
        int countOfProvinces = 0;
        
        // map to keep a track of Node -> Province
        Map<Integer,Integer> provinceMap = new HashMap<>(); 
        int currProvince  = 0;
        provinceMap.put(0,0);
        for(int i=0;i<isConnected.length;i++){
        	 
        	if(provinceMap.containsKey(i))
        		currProvince = provinceMap.get(i);
        	else
        		currProvince++;
        	
            for(int j=0;j<isConnected.length;j++){
            	if(isConnected[i][j] ==1 && provinceMap.get(j)==null)
            		provinceMap.put(j,currProvince);

            }

        }
        return currProvince;

    }

}
