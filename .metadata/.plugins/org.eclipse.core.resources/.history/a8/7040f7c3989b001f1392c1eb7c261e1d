package datastructures.graphs;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

public class BFSAdjacencyMatrix {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	public static boolean validPath(int n, int[][] edges, int source, int destination) {
	// create a adjacency matrix to represent the graph
		
	boolean[][] graph = new boolean[n][n];
	
	// initialize the matrix with false
	for(boolean[] node: graph) {
		Arrays.fill(node, false);
	}
	
	// for each edge given, fill the matrix positions to true
	for(int[] edge: edges) {
		int u = edge[0];
		int v = edge[1];
		graph[u][v] = true;
		graph[v][u] = true;
	}
	
	
	
	// create a queue for represeting visited nodes
	Queue<Integer> queue = new LinkedList<>();
	queue.add(source);
	
	
	
	
	return false;
	}

}
